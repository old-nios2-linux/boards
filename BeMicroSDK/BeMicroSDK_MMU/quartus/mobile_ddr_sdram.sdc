## Microtronix SDRAM IP Timing Constraint Script
## Avalon Multi-port SDRAM Memory Controller IP Core
## Build : 169/9.7.2010

# Defines

set board_skew_ck_dqs 0.0
set board_skew_ck_cmd 0.0
set board_skew_dqs_dq 0.0

set tCK    7.5
set tDS    0.8
set tDH    0.8
set tIS    1.3
set tIH    1.3
set tDSS   0.2
set tDSH   0.2
set tDQSQ  0.6
set tQHS   .75
set tDQSCK 2.0
set tDCD   0.0
set tDQSS  0.75

set pll_ref_clk 20

set additional_addresscmd_tpd 0

set fpga_tREAD_CAPTURE_SETUP_ERROR 0
set fpga_tREAD_CAPTURE_HOLD_ERROR 0
set WR_DQS_DQ_SETUP_ERROR 0
set WR_DQS_DQ_HOLD_ERROR 0
set fpga_tCK_ADDR_CTRL_SETUP_ERROR 0
set fpga_tCK_ADDR_CTRL_HOLD_ERROR 0
set fpga_tDQSS_SETUP_ERROR 0
set fpga_tDSSH_HOLD_ERROR 0

proc round_3dp { x } {
    return [expr { round($x * 1000) / 1000.0  } ]
}
#######################################################
## Pin Assignments

set pins(addrcmd) { msdram_a[0] msdram_a[1] msdram_a[2] msdram_a[3] msdram_a[4] msdram_a[5] msdram_a[6] msdram_a[7] \
                    msdram_a[8] msdram_a[9] msdram_a[10] msdram_a[11] msdram_a[12] \
                    msdram_ba[0] msdram_ba[1] \
                    msdram_cs msdram_cas msdram_ras msdram_we msdram_cke }

set pins(dqm)     { msdram_dqm[0] msdram_dqm[1] }

set pins(ck_p)    { msdram_clk_out_p }
set pins(ck_n)    { msdram_clk_out_n }

set dqgroup_0   "{msdram_dqs[0]} { msdram_dq[0] msdram_dq[1] msdram_dq[2] msdram_dq[3] msdram_dq[4] msdram_dq[5] msdram_dq[6] msdram_dq[7] }"
set dqgroup_1   "{msdram_dqs[1]} { msdram_dq[8] msdram_dq[9] msdram_dq[10] msdram_dq[11] msdram_dq[12] msdram_dq[13] msdram_dq[14] msdram_dq[15] }"

set pins(dqgroup) [list $dqgroup_0 $dqgroup_1]

#######################################################
# Create Clocks

# Create all master source clocks in your design.
create_clock -name sdram_base_clock -period $pll_ref_clk [get_ports your_clock_pin]

# Derive PLL clocks
derive_pll_clocks

#######################################################

# The clock paths will be different depending on the FPGA and the PLL's used in your desgin.
# In the TimeQuest console window, type 'derive_pll_clocks' to obtain the clock
# paths generated by pll.
# For eg, In Cyclone III architecture the Clock path is:
# {inst1|altpll_component|auto_generated|pll1|clk[0]}
# where inst1 is the instance name of one of the PLLs in the design
# altpll_component|auto_generated|pll1 is the string path used in Cyclone III, this
# will be different if using Stratix II or III.
# clk[0] is the first output clock of the PLL.
# For e.g the Stratix II PLL output clock path is {{inst|altpll_component|pll1|clk[0]}}

set system_clk {inst1|altpll_component|auto_generated|pll1|clk[0]}
set sdram_clk {inst2|altpll_component|auto_generated|pll1|clk[0]}
set sdram_write_clk {inst2|altpll_component|auto_generated|pll1|clk[1]}
#######################################################

set_false_path -from [get_clocks $system_clk] -to [get_clocks $sdram_clk]
set_false_path -from [get_clocks $sdram_clk] -to  [get_clocks $system_clk]

set_false_path -from [get_clocks $system_clk] -to [get_clocks $sdram_write_clk]
set_false_path -from [get_clocks $sdram_write_clk] -to  [get_clocks $system_clk]

# If additional port clocks are used in your design, add the timing constraints for those clocks
# in this script and set the necessary false paths.  E.g:

#set_false_path -from port_clk -to [get_clocks $sdram_clk]
#set_false_path -from [get_clocks $sdram_clk] -to  port_clk
#
#set_false_path -from port_clk -to [get_clocks $sdram_write_clk]
#set_false_path -from [get_clocks $sdram_write_clk] -to  port_clk

#######################################################

# Output clocks

foreach clockname $pins(ck_p) {
    create_generated_clock -add -multiply_by 1 -source $sdram_clk -name $clockname $clockname
    set_false_path -from * -to [get_ports $clockname]
    set_false_path -from  $sdram_write_clk -to [get_clocks $clockname]
}

foreach clockname $pins(ck_n) {
    create_generated_clock -add -multiply_by 1 -invert -source $sdram_clk -name $clockname $clockname
    set_false_path -from * -to [get_ports $clockname]
    set_false_path -from $sdram_write_clk -to [get_clocks $clockname]
}

#######################################################

# Output path
set i 0
foreach dqgroup $pins(dqgroup) {

    set dqspin [lindex $dqgroup 0]

    foreach ck $pins(ck_p) {
        set_output_delay -min [round_3dp [expr {$tCK * $tDQSS - $board_skew_ck_dqs}]] -clock $ck [get_ports $dqspin] -add_delay
        set_output_delay -max [round_3dp [expr {$tCK - $tCK * $tDQSS + $board_skew_ck_dqs}]] -clock $ck [get_ports $dqspin] -add_delay
    }

    foreach ckn $pins(ck_n) {
        set_output_delay -min [round_3dp [expr {$tCK * $tDQSS - $board_skew_ck_dqs}]] -clock $ckn [get_ports $dqspin] -add_delay -clock_fall
        set_output_delay -max [round_3dp [expr {$tCK - $tCK * $tDQSS + $board_skew_ck_dqs}]] -clock $ckn [get_ports $dqspin] -add_delay -clock_fall
    }

    create_generated_clock -add -source $sdram_clk -multiply_by 1 -name ${dqspin}_out [get_ports $dqspin]

    set_false_path -fall_from  $sdram_clk -to [get_ports $dqspin]

    set_output_delay  -clock ${dqspin}_out -max [round_3dp [expr {$board_skew_dqs_dq + $tDS + $WR_DQS_DQ_SETUP_ERROR}]] [lindex $dqgroup 1]
    set_output_delay  -clock ${dqspin}_out -min [round_3dp [expr {-$tDH - $board_skew_dqs_dq - $tDCD - $WR_DQS_DQ_HOLD_ERROR}]] [lindex $dqgroup 1]
    set_output_delay -add_delay -clock_fall -clock ${dqspin}_out -max [round_3dp [expr {$board_skew_dqs_dq + $tDS + $WR_DQS_DQ_SETUP_ERROR}]] [lindex $dqgroup 1]
    set_output_delay -add_delay -clock_fall -clock ${dqspin}_out -min [round_3dp [expr {-$tDH - $board_skew_dqs_dq - $tDCD - $WR_DQS_DQ_HOLD_ERROR}]] [lindex $dqgroup 1]

    set_output_delay -add_delay  -clock ${dqspin}_out -max [round_3dp [expr {$board_skew_dqs_dq + $tDS + $WR_DQS_DQ_SETUP_ERROR}]] [lindex $pins(dqm) $i]
    set_output_delay -add_delay  -clock ${dqspin}_out -min [round_3dp [expr {-$tDH - $board_skew_dqs_dq - $tDCD - $WR_DQS_DQ_HOLD_ERROR}]] [lindex $pins(dqm) $i]

    set_output_delay -add_delay -clock_fall -clock ${dqspin}_out -max [round_3dp [expr {$board_skew_dqs_dq + $tDS + $WR_DQS_DQ_SETUP_ERROR}]] [lindex $pins(dqm) $i]
    set_output_delay -add_delay -clock_fall -clock ${dqspin}_out -min [round_3dp [expr {-$tDH - $board_skew_dqs_dq - $tDCD - $WR_DQS_DQ_HOLD_ERROR}]] [lindex $pins(dqm) $i]

    set_false_path -from [get_clocks ${dqspin}_out] -to [get_clocks $system_clk]
    set_false_path -from [get_clocks $system_clk]   -to [get_clocks ${dqspin}_out]

    set_false_path -setup -rise_from [get_clocks ${dqspin}_out] -fall_to [get_clocks $sdram_write_clk]
    set_false_path -setup -fall_from [get_clocks ${dqspin}_out] -rise_to [get_clocks $sdram_write_clk]
    set_false_path -setup -rise_from [get_clocks $sdram_write_clk] -fall_to [get_clocks ${dqspin}_out]
    set_false_path -setup -fall_from [get_clocks $sdram_write_clk] -rise_to [get_clocks ${dqspin}_out]

    set_false_path -hold -rise_from [get_clocks ${dqspin}_out] -fall_to [get_clocks $sdram_write_clk]
    set_false_path -hold -fall_from [get_clocks ${dqspin}_out] -rise_to [get_clocks $sdram_write_clk]
    set_false_path -hold -rise_from [get_clocks $sdram_write_clk] -fall_to [get_clocks ${dqspin}_out]
    set_false_path -hold -fall_from [get_clocks $sdram_write_clk] -rise_to [get_clocks ${dqspin}_out]

    # Add necessary false paths for additional port clocks in your design

#    set_false_path -from [get_clocks ${dqspin}_out] -to port_clk
#    set_false_path -from port_clk -to [get_clocks ${dqspin}_out]

    set_false_path -to [get_keepers {*|mtx_sdram_ddr_bidir:*|dq_reg_in*}] -from ${dqspin}_out
    set_false_path -to [get_keepers {*|mtx_sdram_controller:*|sdram_data_from_sdram*}] -from ${dqspin}_out

    set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_lsp_burst_counter_reset}] -fall_to ${dqspin}_out
    set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_lsp_burst_counter_reset}] -rise_to ${dqspin}_out

    set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_reset}] -fall_to ${dqspin}_out
    set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_reset}] -rise_to ${dqspin}_out

    set i [expr {$i + 1}]
}
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_reset}] -to [get_keepers {*|mtx_sdram_ddr_bidir:*|dq_reg_in_*}]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_reset}] -to [get_keepers {*|mtx_sdram_ddr_bidir:*|dqs_clk_active}]

#######################################################

# Input path
foreach dqgroup $pins(dqgroup) {

    set dqspin [lindex $dqgroup 0]

    create_clock -period $tCK -name ${dqspin}_in $dqspin -add
    create_clock -add -period $tCK -name v_${dqspin}_in

    set_input_delay -add_delay -clock v_${dqspin}_in -max [round_3dp [expr {$tDQSQ + $board_skew_dqs_dq}]] [lindex $dqgroup 1]
    set_input_delay -add_delay -clock v_${dqspin}_in -min [round_3dp [expr {-$tQHS - $board_skew_dqs_dq}]] [lindex $dqgroup 1]

    set_input_delay -add_delay -clock_fall -clock v_${dqspin}_in -max [round_3dp [expr {$tDQSQ + $board_skew_dqs_dq}]] [lindex $dqgroup 1]
    set_input_delay -add_delay -clock_fall -clock v_${dqspin}_in -min [round_3dp [expr {-$tQHS - $board_skew_dqs_dq}]] [lindex $dqgroup 1]

    set_false_path -from [get_clocks ${dqspin}_in] -to [get_clocks $system_clk]
    set_false_path -from [get_clocks $system_clk]  -to [get_clocks ${dqspin}_in]
    # Add necessary false paths for additional port clocks in your design
#    set_false_path -from [get_clocks _in] -to port_clk
#    set_false_path -from port_clk -to [get_clocks _in]

    set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_lsp_burst_counter_reset}] -fall_to ${dqspin}_in
    set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_lsp_burst_counter_reset}] -rise_to ${dqspin}_in

    set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_reset}] -fall_to ${dqspin}_in
    set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_reset}] -rise_to ${dqspin}_in

    set_false_path -from [get_keepers {*|mtx_sdram_avalon_random:*|sdram_cache_select}] -to ${dqspin}_in
    set_false_path -from [get_keepers {*|mtx_sdram_avalon_random:*|sdram_reset*}] -to ${dqspin}_in

}

# Set false paths for DDR same edge capture, must be done after all clocks are created
foreach dqgroup $pins(dqgroup) {

    set dqspin [lindex $dqgroup 0]

    # On same edge capture DDR interface the paths from RISE to FALL and
    # from FALL to RISE are not valid for setup analysis
    set_false_path -setup -rise_from [get_clocks v_*_in] -fall_to [get_clocks ${dqspin}_in]
    set_false_path -setup -fall_from [get_clocks v_*_in] -rise_to [get_clocks ${dqspin}_in]

    # On same edge capture DDR interface the paths from RISE to RISE and
    # FALL to FALL are not valid for hold analysis
    set_false_path -hold -rise_from [get_clocks v_*_in] -rise_to [get_clocks ${dqspin}_in]
    set_false_path -hold -fall_from [get_clocks v_*_in] -fall_to [get_clocks ${dqspin}_in]


}

# exclusive grouping for input and output
set_clock_groups -exclusive -group [get_clocks {*msdram_dqs[*]_in}] -group [get_clocks {*msdram_dqs[*]_out}]

#######################################################
# Address Command
foreach ckclock_p $pins(ck_p) {
    set_output_delay -add_delay -clock $ckclock_p -max [round_3dp [expr { $tIS + $board_skew_ck_cmd + $tDCD + $additional_addresscmd_tpd + $fpga_tCK_ADDR_CTRL_SETUP_ERROR}]] $pins(addrcmd)
    set_output_delay -add_delay -clock $ckclock_p -min [round_3dp [expr {-$tIH - $board_skew_ck_cmd - $tDCD + $additional_addresscmd_tpd - $fpga_tCK_ADDR_CTRL_HOLD_ERROR}]]  $pins(addrcmd)
}

foreach ckclock_n $pins(ck_n) {
    set_output_delay -clock_fall -add_delay -clock $ckclock_n -max [round_3dp [expr { $tIS + $board_skew_ck_cmd + $tDCD + $additional_addresscmd_tpd + $fpga_tCK_ADDR_CTRL_SETUP_ERROR}]] $pins(addrcmd)
    set_output_delay -clock_fall -add_delay -clock $ckclock_n -min [round_3dp [expr {-$tIH - $board_skew_ck_cmd - $tDCD + $additional_addresscmd_tpd - $fpga_tCK_ADDR_CTRL_HOLD_ERROR}]]  $pins(addrcmd)
}

#######################################################

set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_suppress_first_write*}] -to [get_keepers {*|mtx_sdram_controller:*|lsp_sdram_suppress_first_write*}]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|dqs_lsp_end_set[*]}] -to [get_keepers {*|mtx_sdram_controller:*|sdram_dqs_lsp_end_set[*]}]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|lsp_ddr_burst_counter_run[*]}] -to [get_keepers {*|mtx_sdram_controller:*|sdram_lsp_ddr_burst_counter_run_sync}]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_burst_counter[*]}] -to [get_keepers {*|mtx_sdram_controller:*|dqs_sdram_burst_completed[*]}]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_column_words[*]}] -to [get_keepers {*|mtx_sdram_controller:*|lsp_ddr_burst_counter[*][*]}]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|mtx_sdram_controller_scheduler:scheduler|sdram_select[*]}] -to [get_keepers {*|mtx_sdram_controller:*|lsp_sel[*][*]}]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|lsp_ddr_burst_counter_run[*]}] -to [get_keepers {*|mtx_sdram_controller:*|sdram_lsp_ddr_burst_counter_run_sync}]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_reset}] -fall_to [get_clocks $sdram_clk]
set_false_path -from [get_keepers {*|mtx_sdram_controller:*|sdram_reset}] -to [get_clocks $sdram_write_clk]

#######################################################

derive_clock_uncertainty
